import tkinter as tk  # Import tkinter for GUI components
import random  # Import random for generating computer's move

def play_game(user_choice):
    """Play the game against the computer's choice."""
    choices = ['rock', 'paper', 'scissors']  # Possible choices
    computer_choice = random.choice(choices)  # Computer picks a move at random

    # Determine result based on choices
    if user_choice == computer_choice:
        result = "It\'s a tie!"  # If both chose the same
    elif (user_choice == 'rock' and computer_choice == 'scissors') or \
         (user_choice == 'paper' and computer_choice == 'rock') or \
         (user_choice == 'scissors' and computer_choice == 'paper'):
        result = "You win!"  # User wins if it beats computer's move
    else:
        result = "You lose!"  # Otherwise, it's a lose

    # Update the label to show choices and result
    result_label.config(text=f"Your choice: {user_choice}\nComputer's choice: {computer_choice}\n{result}")

# GUI setup
root = tk.Tk()  # Create main application window
root.title("Rock Paper Scissors")  # Set title of the window
root.geometry("400x400")  # Set dimensions of the window
root.config(bg="#edf2f4")  # Set background color of the window

# Title label
label = tk.Label(root, text="Choose Rock, Paper, or Scissors!", font=('Helvetica', 16), bg="#edf2f4")
label.pack(pady=20)  # Display label with padding at the top

# Frame to hold the 3 button widgets
frame = tk.Frame(root, bg="#edf2f4")
frame.pack()

# Button for choosing "rock"
rock = tk.Button(frame, text="Rock", font=('Helvetica', 14), command=lambda: play_game('rock'), width=10)
rock.grid(row=0, column=0, padx=10, pady=10)

# Button for choosing "paper"
paper = tk.Button(frame, text="Paper", font=('Helvetica', 14), command=lambda: play_game('paper'), width=10)
paper.grid(row=0, column=1, padx=10, pady=10)

# Button for choosing "scissors"
scissors = tk.Button(frame, text="Scissors", font=('Helvetica', 14), command=lambda: play_game('scissors'), width=10)
scissors.grid(row=0, column=2, padx=10, pady=10)

# Label to show result
result_label = tk.Label(root, text="", font=('Helvetica', 14), bg="#edf2f4")
result_label.pack(pady=20)

# Run main event loop to keep the GUI alive
root.mainloop()
